{{- $version := default "latest" .Values.version }}
apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: {{ .Values.templateName }}
spec:
  templates:
    - name: main
      inputs:
        parameters:
          - name: input-pvc-name
          - name: input-xml-path
          - name: output-pvc-name
          - name: objects-per-part
          - name: gunzip
          - name: memory-mib
          - name: cpu-m
      volumes:
        - name: in
          persistentVolumeClaim:
            claimName: '{{ "{{inputs.parameters.input-pvc-name}}" }}'
            readOnly: true
        - name: out
          persistentVolumeClaim:
            claimName: '{{ "{{inputs.parameters.output-pvc-name}}" }}'
      {{- $mem := "{{inputs.parameters.memory-mib}}" }}
      {{- $cpu := "{{inputs.parameters.cpu-m}}" }}
      podSpecPatch: |
        containers:
          - name: main
            resources:
              requests:
                memory: {{ $mem }}Mi
                cpu: {{ $cpu }}m
              limits:
                memory: {{ $mem }}Mi
                cpu: {{ $cpu }}m
      script:
        image: us.gcr.io/broad-dsp-gcr-public/xml-to-json-list-clp:{{ $version }}
        volumeMounts:
          - name: in
            mountPath: /in
            readOnly: true
          - name: out
            mountPath: /out
        env:
          - name: MEM_MIB
            value: {{ $mem | quote }}
          - name: INPUT
            value: {{ "/in/{{inputs.parameters.input-xml-path}}" }}
          - name: OBJS_PER_PART
            value: '{{ "{{inputs.parameters.objects-per-part}}" }}'
          - name: GUNZIP
            value: '{{ "{{inputs.parameters.gunzip}}" }}'
        command: [bash]
        source: |
          set -euo pipefail

          declare -a args=(
            --input=${INPUT}
            --output=/out
            --objects-per-part=${OBJS_PER_PART}
          )
          if [[ "${GUNZIP}" == "true" ]]; then
            args+=(--gunzip-input)
          fi

          # Clear the output dir to avoid corrupted outputs.
          rm -rf /out/*

          # Prevent the heap from consuming all of the pod's memory.
          declare -r java_mem=$(((${MEM_MIB} - 1024)))
          export JAVA_OPTS="-Xmx${java_mem}m -Xms${java_mem}m"
          /app/bin/xml-to-json-list-clp ${args[@]}
